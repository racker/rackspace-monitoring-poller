swagger: '2.0'
info:
  version: '1'
  description: This protocol is actually not REST based, but rather a line-oriented streaming JSON protocol.
  title: Poller-Endpoint Protocol
  license:
    name: Apache V2.0

produces:
  - application/json

paths:
  /:
    post:
      summary: N/A
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Frame'
      responses:
        '200':
          description: N/A
          schema:
            $ref: '#/definitions/Frame'
  /poller/prepare:
    post:
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PollerPrepare'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PollerPrepareResponse'
  /poller/prepare/block:
    post:
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PollerPrepareBlock'
      responses:
        '200':
          description: none
  /poller/prepare/end:
    post:
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PollerPrepareEnd'
      responses:
        '200':
          description: none
  /poller/commit:
    post:
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PollerCommit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PollerCommitResponse'
  /poller/check-test:
    post:
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PollerCheckTest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PollerCheckTestResponse'
  /metrics:
    post:
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CheckMetricsPostMulti'
      responses:
        '200':
          description: success
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Frame:
    type: object
    discriminator: method
    properties:
      v:
        type: string
      id:
        type: integer
        format: int64
      target:
        type: string
      source:
        type: string
      method:
        type: string
        enum:
          - poller.prepare
          - poller.prepare.block
          - poller.prepare.end
          - poller.commit
          - check_metrics.post_multi
      error:
        $ref: '#/definitions/Error'
    required:
      - v
      - id
      - target
      - source
  PollerPrepareManifest:
    type: object
    properties:
      action:
        type: string
        enum:
          - continue
          - restart
          - start
      id:
        type: string
      type:
        type: string
      entity_id:
        type: string
  PartitionVersion:
    type: integer
    format: int64
  ZoneId:
    type: string
  MetricsPost:
    type: object
    required:
      - entity_id
      - check_id
      - check_type
      - metrics
      - state
      - status
      - timestamp
    properties:
      entity_id:
        type: string
      check_id:
        type: string
      check_type:
        type: string
        minLength: 1
        maxLength: 64
      metrics:
        type: array
        minItems: 1
        items:
          type: array
          description: resource
          minItems: 2
          maxItems: 2
          items:
            - type: string
              description: resource name
            - type: object
              description: resource metrics
              minProperties: 1
              additionalProperties:
                type: object
                description: metric tuple
                properties:
                  t:
                    type: string
                    enum:
                      - string
                      - gauge
                      - int32
                      - uint32
                      - int64
                      - uint64
                      - double
                  v:
                    type: string
                    minLength: 1
                  u:
                    type: string
                required:
                  - t
                  - v
      state:
        type: string
        enum:
          - available
          - unavailable
      status:
        type: string
        minLength: 0
        maxLength: 256
      timestamp:
        type: integer
  Check:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      period:
        type: integer
        format: int64
      timeout:
        type: integer
        format: int64
      entity_id:
        type: string
      zone_id:
        type: string
      disabled:
        type: boolean
      ip_addresses:
        type: object
        additionalProperties:
          type: string
      target_alias:
        type: string
      target_hostname:
        type: string
      target_resolver:
        type: string
    required:
      - id
      - type
      - period
      - timeout
      - entity_id
      - zone_id
  PollerPrepare:
    description: poller.prepare
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          params:
            type: object
            properties:
              zone_id:
                $ref: '#/definitions/ZoneId'
              version:
                $ref: '#/definitions/PartitionVersion'
              manifest:
                type: array
                items:
                  $ref: '#/definitions/PollerPrepareManifest'
  CheckMetricsPostMulti:
    description: check_metrics.post_multi
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          params:
            $ref: '#/definitions/MetricsPost'
  PollerCheckTest:
    description: check.test
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          params:
            $ref: '#/definitions/Check'
  PollerCheckTestResponse:
    description: test.check
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          result:
            $ref: '#/definitions/MetricsPost'
  PollerPrepareBlock:
    description: poller.prepare.block
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          params:
            type: object
            properties:
              zone_id:
                $ref: '#/definitions/ZoneId'
              version:
                $ref: '#/definitions/PartitionVersion'
              block:
                type: array
                items:
                  $ref: '#/definitions/Check'
            required:
              - zone_id
              - version
              - block
  PollerPrepareEnd:
    description: poller.prepare.end
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          params:
            type: object
            properties:
              zone_id:
                $ref: '#/definitions/ZoneId'
              version:
                $ref: '#/definitions/PartitionVersion'
              directive:
                type: string
                enum:
                  - prepare
                  - abort
            required:
              - zone_id
              - version
              - directive
  PollerPrepareResponse:
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          result:
            type: object
            properties:
              zone_id:
                $ref: '#/definitions/ZoneId'
              version:
                $ref: '#/definitions/PartitionVersion'
              status:
                type: string
                enum:
                  - prepared
                  - aborted
                  - failed
                  - ignored
              details:
                type: string
            required:
              - zone_id
              - version
              - status
  PollerCommit:
    description: poller.commit
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          params:
            type: object
            properties:
              zone_id:
                $ref: '#/definitions/ZoneId'
              version:
                $ref: '#/definitions/PartitionVersion'
            required:
              - zone_id
              - version
  PollerCommitResponse:
    description: response to poller.commit
    allOf:
      - $ref: '#/definitions/Frame'
      - type: object
        properties:
          result:
            type: object
            properties:
              zone_id:
                $ref: '#/definitions/ZoneId'
              version:
                $ref: '#/definitions/PartitionVersion'
              status:
                type: string
                enum:
                  - committed
                  - ignored
            required:
              - zone_id
              - version
              - status
